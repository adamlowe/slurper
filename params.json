{"name":"slurper","body":"# Description\r\n\r\nSlurper allows you to quickly compose your stories in a text file and import them into Pivotal Tracker.\r\n\r\nWorks great with slurper.vim! (http://github.com/adamlowe/vim-slurper)\r\n\r\n# Patches/Pull Requests\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a\r\n  future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history.\r\n  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request.\r\n\r\n# Setup\r\n\r\n    $gem install slurper\r\n\r\n# Config\r\n\r\nSlurper requires a slurper_config.yml file in your working directory. This file contains your Tracker API and story requestor information.\r\n\r\nExample\r\n\r\n    project_id: 1234\r\n    token: 123abc123abc123abc\r\n    requested_by: Jane Stakeholder\r\n    ssl: true\r\n\r\nThe project_id tells tracker which project to add your stories to. It can be found on the project settings or the url for the project.\r\n\r\nThe token can be found on your personal profile page in Pivotal Tracker.\r\n\r\nThe requested_by field should be the name of your project stakeholder exactly as it appears in tracker.\r\n\r\nThe ssl field should be set to true if you've enabled \"Use HTTPS\" in Pivotal Tracker.\r\nSSL is being verified by peer using the cacert.pem from (http://curl.haxx.se/ca)\r\n\r\n# Usage\r\n\r\nCreate a stories.slurper file and compose your stories in the slurper story format. In your working directory use the slurp command to import your stories from the stories.slurper file into Pivotal Tracker. Slurper looks for a stories.slurper file in your current directory by default, however, you can provide an alternate story source file if necessary.\r\n\r\nDefault\r\n\r\n    $slurp ~/stories.slurper\r\n  \r\nAlso valid\r\n\r\n    $slurp ~/special_stories.slurper\r\n  \r\nOr even\r\n\r\n    $slurp ~/mystories.txt\r\n\r\nExample stories.slurper\r\n\r\n    ==\r\n    story_type:\r\n      chore\r\n    name:\r\n      Set Up Staging Environment\r\n    description:\r\n      Set up and configure staging environment for approval of stories\r\n\r\n    labels:\r\n      staging\r\n    ==\r\n    story_type:\r\n      feature\r\n    name:\r\n      Campaign Manager Does Something\r\n    description:\r\n      In order to get some value\r\n      As a campaign manager\r\n      I want to do something\r\n\r\n      - can do something\r\n\r\n    labels:\r\n      campaign managers\r\n    ==\r\n    story_type:\r\n      release\r\n    name:\r\n      Big Release\r\n    description:\r\n      This release marks a lot of awesome functionality\r\n\r\n    labels:\r\n      campaign managers\r\n    ==\r\n    story_type:\r\n      bug\r\n    name:\r\n      I did something and nothing happened\r\n    description:\r\n      When I do something, another thing is supposed to happen but I see an error screen instead.\r\n\r\n    labels:\r\n      campaign managers\r\n\r\nNote: the story source file is whitespace-sensitive. Be sure the value for each key phrase is indented with two spaces beneath each key phrase. Also, start each story with a double-equals on its own line.\r\n\r\nYour best bet is to leverage slurper.vim and benefit from its auto-indenting goodness.\r\n\r\nCredit - Wes Gibbs (http://wgibbs.github.com) thought of and wrote slurper as a ruby script. It was later packaged and released as a gem by his fellow Rocketeers after using it and finding it extremely handy.\r\n","tagline":"Gem for slurping plain text stories into Pivotal Tracker","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}